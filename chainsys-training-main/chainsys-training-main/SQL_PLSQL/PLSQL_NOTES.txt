SCENARIO - ADDING_BENEFICIARY
SELECT RECEIVER ACCOUNT DETAILS

SCENARIO - FUND_TRANSFER
SELECT SENDER ACCOUNT DETAILS
UPDATE SENDER ACCOUNT BALANACE  
UPDATE RECEIVER ACCOUNT BALANCE

SCENARIO - PLACING_ORDER
INSERT NEW ORDER 
SEND MAIL/MESSAGE
? CANCEL ORDER - UPDATE ORDER STATUS - COOKING,DRIVING,DELIVERED 
? TRACK ORDER 

PL - PROCEDURAL LANGUAGE
BLOCK - PLACING_ORDER(INPUTS) 
1.DECLARATION
2.EXECUTION(MANDATORY)
3.EXCEPTION

ANONYMOUS BLOCK 
+ UNNAMED BLOCK 
+ CANNOT BE REUSED/CALLED

FUNDAMENTALS 
+ ANONYMOUS BLOCK
+ DATA TYPE
+ VARIABLES
+ COMMENTS 
+ CONSTANTS

CONTROL STATEMENTS
+ IF
+ CASE
+ GOTO
+ NULL

LOOP STATEMENTS 
+ BASIC LOOP 
+ FOR LOOP
+ WHILE LOOP 
+ CONTINUE
+ EXIT 

DATATYPES
+ RECORD
+ %TYPE
+ %ROWTYPE
+ ARRAYS
+ NESTED TABLE

CURSORS
+ IMPLICIT
+ EXPLICIT
PARAMETER MODE
+ IN (DEFAULT)
+ OUT
+ INOUT
PROCEDURE - BUSINESS LOGIC
+ TRACK_ORDER
+ PLACE_ORDER
+ CANCEL_ORDER
FUNCTION - COMPUTATIONAL LOGIC 
+ TOTAL_ORDER_VALUE

REFERENCE :
-- C SYNTAX
INT SQUARE(INT NUMBER){
 INT RESULT=0;
 RESULT = NUMBER * NUMBER;
 RETURN RESULT;
}
-- PLSQL SYNTAX 
 FUNCTION square (original NUMBER)   -- parameter list
    RETURN NUMBER                     -- RETURN clause
  AS                                  -- Declarative part begins
    original_squared NUMBER;
  BEGIN                               -- Executable part begins
    original_squared := original * original;
    RETURN original_squared;          -- RETURN statement
  END;

+ PACKAGE
+ TRIGGER 
+ EXCEPTION 























